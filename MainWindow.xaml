<Window x:Class="supportHelper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:supportHelper"
        xmlns:properties="clr-namespace:supportHelper.Properties"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="700">
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <DockPanel>
        <Expander DockPanel.Dock="Right"  ExpandDirection="Left">
            <StackPanel Width="300" Margin="3" Orientation="Vertical" >
                <StackPanel DataContext="{Binding Path=(properties:Settings.Default)}">
                    <TextBlock Text="Настройки"/>
                    <TextBlock Text="Адрес для API запросов или путь в XML файлу настроек. Требуется перезапуск приложения." TextWrapping="Wrap" Foreground="Gray" />
                    <TextBox Text="{Binding BaseAddress}"/>
                    <TextBlock Text="Путь к папкам офисов" Foreground="Gray" />
                    <TextBox Text="{Binding IikoRMSPath}"/>
                    <TextBlock Text="Путь к папкам чейнов" Foreground="Gray" />
                    <TextBox Text="{Binding IikoChainPath}"/>
                    <TextBlock Text="Путь к AnyDesk.exe" Foreground="Gray" />
                    <TextBox Text="{Binding AnyDeskPath}" />
                    <TextBlock Text="Tокен авторизации, для XML игнорируется"  TextWrapping="Wrap" Foreground="Gray"/>
                    <TextBox Margin="3,0,0,0" Text="{Binding AccessToken}"/>
                    <TextBlock Text="Id справочника (handbook= в адресе открытого справочника), для XML игнорируется"  TextWrapping="Wrap" Foreground="Gray"/>
                    <TextBox Text="{Binding DirectoryId}"/>
                    <TextBlock Text="iiko логин" Foreground="Gray"/>
                    <TextBox Text="{Binding IikoLogin}"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Margin="10" FontWeight="Heavy" TextWrapping="Wrap" 
                           Text="Внимание! preAlpha версия. Криптографические алгоритмы не используются, идет base64 преобразование. Только для тестирования и презентаций."/>

                    <TextBlock Text="iiko пароль" Foreground="Gray"/>
                    <TextBox Text="{Binding IikoPassword}"/>
                    <TextBlock Text="AnyDesk пароль" Foreground="Gray"/>
                    <TextBox Text="{Binding AnyDeskPassword}"/>
                    <PasswordBox>
                        <Behaviors:Interaction.Triggers>
                            <Behaviors:EventTrigger EventName="PasswordChanged">
                                <Behaviors:InvokeCommandAction 
                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=PasswordBox}}"
                                    CommandParameter="{Binding ElementName=PasswordBox}"/>
                            </Behaviors:EventTrigger>
                        </Behaviors:Interaction.Triggers>
                    </PasswordBox>
                </StackPanel>
                <UniformGrid Margin="3" Rows="1">
                    <Button Content="Отменить" Command="{Binding ReloadSettingsCommand}"/>
                    <Button Content="Сохранить" Command="{Binding SaveSettingsCommand}" Margin="3,0,0,0"/>
                </UniformGrid>
                

            </StackPanel>
        </Expander>
        <TextBox Margin="2" DockPanel.Dock="Top" Text="{Binding ConnectionFilter, UpdateSourceTrigger=PropertyChanged}"/>
        <Expander DockPanel.Dock="Bottom" ExpandDirection="Up" Header="Команды выбраному элемента">
            <UniformGrid Columns="3">
                <PasswordBox x:Name="PasswordBox" Margin="2"/>
                <Button Margin="2" Content="Установить пароль">
                    <Button.CommandParameter>
                        <MultiBinding>
                            <Binding ElementName="SelectedConnection"/>
                            <Binding ElementName="PasswordBox"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                
                <Button Margin="2" Content="Запустить Офис" Command="{Binding LaunchOfficeCommand}" CommandParameter="{Binding SelectedConnection}"/>
                <Button Margin="2" Content="Запустить АниДеск" Command="{Binding LaunchAnyDeskCommand}" CommandParameter="{Binding SelectedConnection}"/>
                <Button Margin="2" Content="Дублировать" Command="{Binding AddConnectionModelCommand}" 
                    CommandParameter="{Binding SelectedConnection}"/>
                <Button Margin="2" Content="Удалить" Command="{Binding RemoveConnectionModel}"
                    CommandParameter="{Binding SelectedConnection}"/>

                <Button Margin="2" Content="Позвонить" Command="{Binding CallbackCommand}" CommandParameter="{Binding SelectedConnection}"/>
            </UniformGrid>
        </Expander>
        <DataGrid ItemsSource="{Binding ConnectionsList}" 
                  SelectedItem="{Binding SelectedConnection}" 
                  AutoGenerateColumns="False"
                  GridLinesVisibility="Vertical"
                  AlternatingRowBackground="LightGray">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Имя" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Адрес" Binding="{Binding Address}"/>
                <DataGridTextColumn Header="Логин" Binding="{Binding Login}"/>
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GroupItem">
                                        <Expander IsEnabled="True" IsExpanded="True">
                                            <Expander.Header>
                                                <TextBlock Text="{Binding Path=Name}"/>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
        </DataGrid>
    </DockPanel>
</Window>
